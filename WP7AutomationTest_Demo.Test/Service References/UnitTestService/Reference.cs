//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.488
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace WP7AutomationTest_Demo.Test.UnitTestService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UnitTestService.ITestResultReportService")]
    public interface ITestResultReportService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITestResultReportService/SaveTestResultFile", ReplyAction="http://tempuri.org/ITestResultReportService/SaveTestResultFileResponse")]
        System.IAsyncResult BeginSaveTestResultFile(string filename, string filecontent, System.AsyncCallback callback, object asyncState);
        
        void EndSaveTestResultFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITestResultReportService/GetFinalTestResult", ReplyAction="http://tempuri.org/ITestResultReportService/GetFinalTestResultResponse")]
        System.IAsyncResult BeginGetFinalTestResult(bool failure, int failures, int totalScenarios, string message, System.AsyncCallback callback, object asyncState);
        
        void EndGetFinalTestResult(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestResultReportServiceChannel : WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestResultReportServiceClient : System.ServiceModel.ClientBase<WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService>, WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService {
        
        private BeginOperationDelegate onBeginSaveTestResultFileDelegate;
        
        private EndOperationDelegate onEndSaveTestResultFileDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTestResultFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFinalTestResultDelegate;
        
        private EndOperationDelegate onEndGetFinalTestResultDelegate;
        
        private System.Threading.SendOrPostCallback onGetFinalTestResultCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TestResultReportServiceClient() {
        }
        
        public TestResultReportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestResultReportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestResultReportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestResultReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveTestResultFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetFinalTestResultCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService.BeginSaveTestResultFile(string filename, string filecontent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTestResultFile(filename, filecontent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService.EndSaveTestResultFile(System.IAsyncResult result) {
            base.Channel.EndSaveTestResultFile(result);
        }
        
        private System.IAsyncResult OnBeginSaveTestResultFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filename = ((string)(inValues[0]));
            string filecontent = ((string)(inValues[1]));
            return ((WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService)(this)).BeginSaveTestResultFile(filename, filecontent, callback, asyncState);
        }
        
        private object[] OnEndSaveTestResultFile(System.IAsyncResult result) {
            ((WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService)(this)).EndSaveTestResultFile(result);
            return null;
        }
        
        private void OnSaveTestResultFileCompleted(object state) {
            if ((this.SaveTestResultFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTestResultFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTestResultFileAsync(string filename, string filecontent) {
            this.SaveTestResultFileAsync(filename, filecontent, null);
        }
        
        public void SaveTestResultFileAsync(string filename, string filecontent, object userState) {
            if ((this.onBeginSaveTestResultFileDelegate == null)) {
                this.onBeginSaveTestResultFileDelegate = new BeginOperationDelegate(this.OnBeginSaveTestResultFile);
            }
            if ((this.onEndSaveTestResultFileDelegate == null)) {
                this.onEndSaveTestResultFileDelegate = new EndOperationDelegate(this.OnEndSaveTestResultFile);
            }
            if ((this.onSaveTestResultFileCompletedDelegate == null)) {
                this.onSaveTestResultFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTestResultFileCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTestResultFileDelegate, new object[] {
                        filename,
                        filecontent}, this.onEndSaveTestResultFileDelegate, this.onSaveTestResultFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService.BeginGetFinalTestResult(bool failure, int failures, int totalScenarios, string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFinalTestResult(failure, failures, totalScenarios, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService.EndGetFinalTestResult(System.IAsyncResult result) {
            base.Channel.EndGetFinalTestResult(result);
        }
        
        private System.IAsyncResult OnBeginGetFinalTestResult(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool failure = ((bool)(inValues[0]));
            int failures = ((int)(inValues[1]));
            int totalScenarios = ((int)(inValues[2]));
            string message = ((string)(inValues[3]));
            return ((WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService)(this)).BeginGetFinalTestResult(failure, failures, totalScenarios, message, callback, asyncState);
        }
        
        private object[] OnEndGetFinalTestResult(System.IAsyncResult result) {
            ((WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService)(this)).EndGetFinalTestResult(result);
            return null;
        }
        
        private void OnGetFinalTestResultCompleted(object state) {
            if ((this.GetFinalTestResultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFinalTestResultCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFinalTestResultAsync(bool failure, int failures, int totalScenarios, string message) {
            this.GetFinalTestResultAsync(failure, failures, totalScenarios, message, null);
        }
        
        public void GetFinalTestResultAsync(bool failure, int failures, int totalScenarios, string message, object userState) {
            if ((this.onBeginGetFinalTestResultDelegate == null)) {
                this.onBeginGetFinalTestResultDelegate = new BeginOperationDelegate(this.OnBeginGetFinalTestResult);
            }
            if ((this.onEndGetFinalTestResultDelegate == null)) {
                this.onEndGetFinalTestResultDelegate = new EndOperationDelegate(this.OnEndGetFinalTestResult);
            }
            if ((this.onGetFinalTestResultCompletedDelegate == null)) {
                this.onGetFinalTestResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFinalTestResultCompleted);
            }
            base.InvokeAsync(this.onBeginGetFinalTestResultDelegate, new object[] {
                        failure,
                        failures,
                        totalScenarios,
                        message}, this.onEndGetFinalTestResultDelegate, this.onGetFinalTestResultCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService CreateChannel() {
            return new TestResultReportServiceClientChannel(this);
        }
        
        private class TestResultReportServiceClientChannel : ChannelBase<WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService>, WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService {
            
            public TestResultReportServiceClientChannel(System.ServiceModel.ClientBase<WP7AutomationTest_Demo.Test.UnitTestService.ITestResultReportService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveTestResultFile(string filename, string filecontent, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = filename;
                _args[1] = filecontent;
                System.IAsyncResult _result = base.BeginInvoke("SaveTestResultFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveTestResultFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveTestResultFile", _args, result);
            }
            
            public System.IAsyncResult BeginGetFinalTestResult(bool failure, int failures, int totalScenarios, string message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = failure;
                _args[1] = failures;
                _args[2] = totalScenarios;
                _args[3] = message;
                System.IAsyncResult _result = base.BeginInvoke("GetFinalTestResult", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetFinalTestResult(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetFinalTestResult", _args, result);
            }
        }
    }
}
